buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
	}
}

plugins {
	id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'

group = 'com.metacore'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}


ext {
	springCloudVersion = 'Finchley.M8'
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile group: 'commons-codec', name: 'commons-codec', version: '1.4'
	
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.+'
	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:2.+'
	compile group: 'org.springframework.restdocs', name: 'spring-restdocs-webtestclient', version: '2.0.1.RELEASE'


//	compile('io.projectreactor:reactor-core:3.+')
//	compile group: 'org.springframework', name: 'spring-web-reactive', version: '5.+'
	runtime('com.h2database:h2')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.cloud:spring-cloud-contract-wiremock')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.1.0')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.1.0')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	outputs.dir snippetsDir
}


asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

jar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}
